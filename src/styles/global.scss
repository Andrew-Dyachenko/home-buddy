@use "@sass-fairy/math/math";
@use "sass:color";
@use "./conf";
@use "./mix";
@import "~normalize.css/normalize.css";

*,
::before,
::after {
	box-sizing: border-box;
}

:root {
	--animation-timing-function: ease-in-out;
	--animation-duration: 0.15s;
	// --body-color: conf.$body-color;

	font-size: conf.$font-size-root;
	min-width: conf.$xxxs; // If less then horizontal scroll

	/* Indicates that user has notified the system that
	they prefer an interface that removes or replaces
	the types of motion-based animation that trigger
	discomfort for those with vestibular motion disorders.*/
	@media (prefers-reduced-motion: no-preference) {
		scroll-behavior: smooth;
	}

	color-scheme: light dark;
}

:any-link {
	text-decoration: none;
	color: conf.$black;

	&:hover,
	&:active {
		text-decoration: underline;
	}
}

body {
	// font-family: conf.$font-family-sans-serif;
	line-height: conf.$global-line-height;
	background-color: conf.$body-bg;
	color: conf.$body-color;

	@media (prefers-color-scheme: dark) {
		background-color: conf.$body-bg--dark;
		color: conf.$white;
	}
}

#__next {
	display: flex;
	align-items: stretch;
	flex-direction: column;
	min-height: 100vh;
}

.visually-hidden {
	position: absolute;
	width: 1px;
	height: 1px;
	padding: 0;
	margin: -1px; // Fix for https://github.com/twbs/bootstrap/issues/25686
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	white-space: nowrap;
	border: 0;
}

.icon {
	display: inline-block;
	fill: currentColor;
	height: 1em;
	stroke: currentColor;
	stroke-width: 0;
	vertical-align: top;
	width: 1em;

	&_check_rounded {
		fill: transparent;
	}

	&_cross_rounded {
		fill: transparent;
	}
}

.container {
	width: 100%;
	max-width: conf.$xl;
	padding: 0 conf.$global-padding;
	margin: 0 auto;
}

.callout {
	$-bgc: conf.$selago;

	@include mix.isomorphic-color-contrast(conf.$body-bg, $-bgc, color.invert($-bgc, 100%), background-color);

	@include mix.isomorphic-color-contrast(color.invert($-bgc, 100%), conf.$white, conf.$black);

	@include mix.isomorphic-color-contrast(
		conf.$body-bg,
		conf.$west-side,
		color.invert(conf.$west-side, 100%),
		border-color
	);

	display: flex;
	align-items: flex-start;
	border: 1px solid conf.$west-side;
	padding: conf.$global-padding * math.div(8, 16);
	gap: conf.$grid-gutter-width * math.div(10, 32);
	font-size: 1rem;
	font-weight: 500;
	border-radius: 0.5em;
	background-color: $-bgc;

	&__media {
		line-height: 1;
		flex-shrink: 0;
	}

	&__image {
		display: block;
		max-width: 100%;
	}
}

.btn {
	color: conf.$white;
	background-color: conf.$west-side;
	border-radius: 0.25rem;
	border: 1px solid conf.$west-side;
	font-weight: 600;
	font-size: 1rem;
	line-height: inherit;
	padding: calc(1em - 1px) calc(1.5em - 1px);
	min-height: 56px;

	&:hover,
	&:focus {
		border-color: conf.$clementine;
		background-color: conf.$clementine;
	}

	&:active {
		border-color: conf.$bamboo;
		background-color: conf.$bamboo;
	}

	&[disabled] {
		border-color: conf.$chardonnay;
		background-color: conf.$chardonnay;
	}

	@media (prefers-reduced-motion: no-preference) {
		transition: background-color var(--animation-duration)
			var(--animation-timing-function);
	}
}

.formControl {
	$-bgc: conf.$selago;
	&[type="text"],
	&[type="color"],
	&[type="date"],
	&[type="datetime"],
	&[type="datetime-local"],
	&[type="email"],
	&[type="file"],
	&[type="month"],
	&[type="number"],
	&[type="password"],
	&[type="tel"] {
		color: conf.$mine-shaft;
		background-color: $-bgc;
		padding: math.div(10, 14) + 0em math.div(16, 14) + 0em;
		border: 1px solid $-bgc;
		border-radius: 0.25rem;
		font-size: math.div(14, 16) + 0rem;
		line-height: math.div(17, 14);
		min-height: 56px;
		outline: 0;
		font-weight: 500;

		&::placeholder {
			color: transparent;
		}

		&:hover {
			color: conf.$royal-blue;
			border-color: conf.$cornflower-blue;
		}

		&:focus {
			border-color: conf.$royal-blue;

			&::placeholder {
				@if (math.unitless(color.blackness($-bgc)) > 50) {
					color: color.change(
						conf.$dove-gray,
						$blackness: 10%,
						$whiteness: 90%
					);
				} @else {
					color: conf.$dove-gray;
				}
			}

			~ .formLabel {
				@if (math.unitless(color.blackness($-bgc)) > 50) {
					color: color.change(
						conf.$royal-blue,
						$blackness: 10%,
						$whiteness: 90%
					);
				} @else {
					color: conf.$royal-blue;
				}

				top: 17%;
				font-size: math.div(10, 16) + 0rem;
			}
		}

		&:not(:placeholder-shown) {
			~ .formLabel {
				@if (math.unitless(color.blackness($-bgc)) > 50) {
					color: color.change(
						conf.$royal-blue,
						$blackness: 10%,
						$whiteness: 90%
					);
				} @else {
					color: conf.$royal-blue;
				}

				top: 17%;
				font-size: math.div(10, 16) + 0rem;
			}
		}

		&[disabled] {
			color: conf.$dove-gray;
			border-color: conf.$selago-2;
			background-color: conf.$selago-2;
		}

		@media (prefers-reduced-motion: no-preference) {
			transition-property: border-color, color;
			transition-duration: var(--animation-duration);
			transition-timing-function: var(--animation-timing-function);
		}
	}
}

.formGroup {
	position: relative;
	display: flex;
	flex-direction: column;

	+ .formHelper {
		margin-top: math.div(-9, 16) + rem;
	}

	&_has {
		&_error {
			.formControl {
				&[type="text"],
				&[type="color"],
				&[type="date"],
				&[type="datetime"],
				&[type="datetime-local"],
				&[type="email"],
				&[type="file"],
				&[type="month"],
				&[type="number"],
				&[type="password"],
				&[type="tel"] {
					border-color: conf.$guardsman-red;

					&:focus,
					&:not(:placeholder-shown) {
						~ .formLabel {
							color: conf.$guardsman-red;
						}
					}
				}
			}

			+ .formHelper {
				color: conf.$guardsman-red;
			}
		}
	}
}

.formLabel {
	@include mix.isomorphic-color-contrast(
		conf.$selago,
		conf.$mine-shaft,
		color.invert(conf.$mine-shaft, 100%)
	);

	order: -1;
	position: absolute;
	font-weight: 500;
	font-size: math.div(14, 16) + 0rem;
	line-height: math.div(17, 14);
	top: 50%;
	left: calc(#{math.div(16, 14) + 0rem} - 2px);
	right: calc(#{math.div(16, 14) + 0rem} - 2px);
	transform: translateY(-50%);

	@media (prefers-reduced-motion: no-preference) {
		transition-property: font-size, top, color;
		transition-duration: var(--animation-duration);
		transition-timing-function: var(--animation-timing-function);
	}
}

.formHelper {
	font-weight: 500;
	font-size: math.div(14, 16) + 0rem;
	color: conf.$dove-gray;
	line-height: math.div(20, 14);
}
